#ifndef __HTTP_CALLBACK__
#define __HTTP_CALLBACK__

#include "HTTP.h"
#include <stdio.h>

//PLUGIN STRUCTS

#ifdef __WIN32__RELEASE__
#include <windows.h>

typedef int (WINAPI* HTTP_IO_REQUEST_CALLBACK) (
//typedef int (__stdcall *HTTP_IO_REQUEST_CALLBACK) (
    int         cbType,
    HTTPHANDLE  HTTPHandle,
	PHTTP_DATA  *request,
    PHTTP_DATA  *response);
#else
typedef int (*HTTP_IO_REQUEST_CALLBACK) (int cbType, HTTPHANDLE HTTPHandle,PHTTP_DATA* request,PHTTP_DATA* response);// __attribute__((stdcall));
#endif

 
//Callbacks types (You can register custom callbacks if needed)

#define CBTYPE_CLIENT_REQUEST   0x01 //OUTGOING HTTP Request Generated by FHScan Core API
#define CBTYPE_CLIENT_RESPONSE  0x02 //INCOMING HTTP Response returned by FHScan Core API to the caller

//Advanced CallBacks needed for handling Internal HTTP PROXY

#define CBTYPE_PROXY_REQUEST   0x04  //Request generated by the HTTP Client (Browser) or FHScan Core API against a PROXY Server
#define CBTYPE_PROXY_RESPONSE  0x08  //Response returned by the HTTP PROXY Server
#define CBTYPE_CALLBACK_ALL     0xFFFFFFFF
#define CBTYPE_UNKNOWN_CALLBACK 0xFFFFFFF0 


//Callback return value:
#define CBRET_STATUS_NEXT_CB_CONTINUE 0
#define CBRET_STATUS_NEXT_CB_BLOCK    1
#define CBRET_STATUS_CANCEL_REQUEST   2


//Exported Functions:
void RegisterHTTPCallBack(unsigned int cbType, HTTP_IO_REQUEST_CALLBACK cb);
int  RemoveHTTPCallBack(unsigned int cbType, HTTP_IO_REQUEST_CALLBACK cb);
int DoCallBack(
    int         cbType,
    HTTPHANDLE HTTPHandle,
	PHTTP_DATA *request,
	PHTTP_DATA *response);

#endif
